function highlight(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if("string"!=typeof t)throw new Error("Invalid type for code.");var n="",o=/[A-Z]/i;numReg=/\d+/im,symReg=/[=\/+,*.:-]+/im,strReg=/^["'`]$/m,decReg=/^let|const|var|for|while|if|else|in$/,others=/^console|Error|try|catch|Math|Object|function|log$/,opeReg=/^default|delete|typeof|string$/;for(var e={bool:!1,delim:"",newstr:""},s={inWord:!1,word:""},r={bool:!1,delim:""},a=0;a<t.length;a++)if(!1===r.bool){if("/"===t[a]&&("/"===t[a+1]||"*"===t[a+1])){r.bool=!0,r.delim=t[a+1],n+="<span class='comment'>"+t[a].toString();continue}!1===e.bool?strReg.test(t[a])?(e.bool=!0,e.delim=t[a],n+="<span class='quotes'>".concat(t[a],"</span>")):!1===s.inWord?o.test(t[a])?(s.inWord=!0,s.word+=t[a].toString()):numReg.test(t[a])?0===a?n+="<span class='number'>".concat(t[a],"</span>"):a>0&&!o.test(t[a-1])?n+="<span class='number'>".concat(t[a],"</span>"):n+=t[a].toString():symReg.test(t[a])?n+="<span class='symbol'>".concat(t[a],"</span>"):n+=t[a].toString():o.test(t[a])||numReg.test(t[a])||/_/.test(n[a])?s.word+=t[a].toString():(s.inWord=!1,decReg.test(s.word)?n+="<span class='declerator'>".concat(s.word,"</span>"):others.test(s.word)?n+="<span class='othkeywords'>".concat(s.word,"</span>"):opeReg.test(s.word)?n+="<span class='operator'>".concat(s.word,"</span>"):n+="".concat(s.word),s.word="",numReg.test(t[a])?0===t?n+="<span class='number'>".concat(t[a],"</span>"):a>0&&!o.test(t[a-1])?n+="<span class='number'>".concat(t[a],"</span>"):n+=t[a].toString():symReg.test(t[a])?n+="<span class='symbol'>".concat(t[a],"</span>"):n+=t[a].toString()):t[a]===e.delim?(e.bool=!1,n+="<span class='string'>".concat(e.newstr,"</span><span class='quotes'>").concat(e.delim,"</span>"),e.newstr=""):e.newstr+=t[a].toString()}else try{n+=t[a].toString(),"/"===r.delim?"\n"===t[a]&&(n+="</span>",r.bool=!1):"*"===r.delim&&"/"===t[a]&&"*"===t[a-1]&&(r.bool=!1,n+="</span>")}catch(t){throw new Error(t)}return n}function nodeHighlighter(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if("string"!=typeof t)throw new Error("Invalid Type of argument.");for(var n=document.querySelectorAll(t),o=0;o<n.length;o++)try{var e=n[o].innerText;n[o].innerHTML="<pre class='minilightcode'>\n"+highlight(e)+"\n</pre>"}catch(t){throw new Error(t)}}