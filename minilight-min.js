"use strict";function highlight(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if("string"!=typeof t)throw new Error("Invalid type for code.");for(var o="",n=/[A-Z]/i,r=/\d+/im,s=/[=\/+,*.:-]+/im,e=/^["'`]$/m,a=/^let$|^const$|^var$|^for$|^do$|^return$|^while$|^if$|^else$|^in$|^throw$|^new$/,c=/^console$|^Error$|^try$|^catch$|^Math$|^Object$|^function$|^log$|^Error$/,i=/^default$|^delete$|^typeof$|^string$/,l=/^function$|^def$/,d={bool:!1,delim:"",newstr:""},p={inWord:!1,word:"",prevWord:""},w={bool:!1,delim:""},$=0;$<t.length;$++)if(!1===w.bool){if("/"===t[$]&&("/"===t[$+1]||"*"===t[$+1])){w.bool=!0,w.delim=t[$+1],o+="<span class='comment'>"+t[$].toString();continue}!1===d.bool?e.test(t[$])?(d.bool=!0,d.delim=t[$],o+="<span class='quotes'>".concat(t[$],"</span>")):!1===p.inWord?n.test(t[$])?(p.inWord=!0,p.word+=t[$].toString()):r.test(t[$])?0===$?o+="<span class='number'>".concat(t[$],"</span>"):$>0&&!n.test(t[$-1])?o+="<span class='number'>".concat(t[$],"</span>"):o+=t[$].toString():s.test(t[$])?o+="<span class='symbol'>".concat(t[$],"</span>"):o+=t[$].toString():n.test(t[$])||r.test(t[$])||/_/.test(o[$])?p.word+=t[$].toString():(p.inWord=!1,a.test(p.word)?o+="<span class='keyword'>".concat(p.word,"</span>"):c.test(p.word)?o+="<span class='othkeywords'>".concat(p.word,"</span>"):i.test(p.word)?o+="<span class='operator'>".concat(p.word,"</span>"):l.test(p.prevWord)?o+="<span class='declaredvar'>".concat(p.word,"</span>"):o+="".concat(p.word),p.prevWord=p.word,p.word="",r.test(t[$])?0===t?o+="<span class='number'>".concat(t[$],"</span>"):$>0&&!n.test(t[$-1])?o+="<span class='number'>".concat(t[$],"</span>"):o+=t[$].toString():s.test(t[$])?o+="<span class='symbol'>".concat(t[$],"</span>"):o+=t[$].toString()):t[$]===d.delim?(d.bool=!1,o+="<span class='string'>".concat(d.newstr,"</span><span class='quotes'>").concat(d.delim,"</span>"),d.newstr=""):d.newstr+=t[$].toString()}else try{o+=t[$].toString(),"/"===w.delim?"\n"===t[$]&&(o+="</span>",w.bool=!1):"*"===w.delim&&"/"===t[$]&&"*"===t[$-1]&&(w.bool=!1,o+="</span>")}catch(t){throw new Error(t)}return o}function nodeHighlighter(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if("string"!=typeof t)throw new Error("Invalid Type of argument.");for(var o=document.querySelectorAll(t),n=0;n<o.length;n++)try{var r=o[n].innerText;o[n].innerHTML="<pre class='minilightcode'>\n"+highlight(r)+"\n</pre>"}catch(t){throw new Error(t)}}